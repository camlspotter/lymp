### Starting build.
# Target: test2.ml.depends, tags: { extension:ml, file:test2.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules test2.ml > test2.ml.depends # cached
# Target: srcs/pyml.mli.depends, tags: { extension:mli, file:srcs/pyml.mli, ocaml, ocamldep, quiet }
ocamldep.opt -modules srcs/pyml.mli > srcs/pyml.mli.depends # cached
# Target: srcs/pyml.cmi, tags: { byte, compile, extension:mli, file:srcs/pyml.mli, interf, ocaml, quiet }
ocamlc.opt -c -I /Users/dodo/.opam/system/lib/bson -I srcs -o srcs/pyml.cmi srcs/pyml.mli # cached
# Target: test2.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:test2.cmo, file:test2.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/dodo/.opam/system/lib/bson -I srcs -o test2.cmo test2.ml # cached
# Target: srcs/pyml.ml.depends, tags: { extension:ml, file:srcs/pyml.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules srcs/pyml.ml > srcs/pyml.ml.depends
# Target: srcs/pyml.cmx, tags: { compile, extension:cmx, extension:ml, file:srcs/pyml.cmx, file:srcs/pyml.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/dodo/.opam/system/lib/bson -I srcs -o srcs/pyml.cmx srcs/pyml.ml
# Target: test2.cmx, tags: { compile, extension:cmx, extension:ml, file:test2.cmx, file:test2.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/dodo/.opam/system/lib/bson -I srcs -o test2.cmx test2.ml
+ ocamlopt.opt -c -I /Users/dodo/.opam/system/lib/bson -I srcs -o test2.cmx test2.ml
File "test2.ml", line 5, characters 25-50:
Warning 10: this expression should have type unit.
# Target: test2.native, tags: { dont_link_with, extension:native, file:test2.native, link, native, ocaml, program, quiet }
ocamlopt.opt unix.cmxa -I /Users/dodo/.opam/system/lib/bson /Users/dodo/.opam/system/lib/bson/bson.cmxa srcs/pyml.cmx test2.cmx -o test2.native
# Compilation successful.
